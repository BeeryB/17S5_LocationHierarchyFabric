{"version":3,"file":"GridCell.js","sourceRoot":"../src/","sources":["utilities/grid/GridCell.tsx"],"names":[],"mappings":";;;IASA;QAA8D,oCAAsB;QAApF;;QAqGA,CAAC;QA9FQ,yBAAM,GAAb;YACM,IAAA,eAaU,EAZZ,cAAI,EACJ,UAAE,EACF,wBAAS,EACT,cAAI,EACJ,sBAAQ,EACR,sBAAQ,EACR,8BAAY,EACZ,wCAAiB,EACjB,4CAAmB,EACnB,gBAAK,EACL,gBAAK,EACL,gCAAa,CACA;YAEf,MAAM,CAAC,CACL,oBAAC,sBAAa,IACZ,EAAE,EAAG,EAAE,GAAG,OAAO,GAAG,KAAK,gBACZ,KAAK,uBACE,IAAI,EACxB,QAAQ,EAAG,QAAQ,EACnB,SAAS,EAAG,eAAG,CAAC,SAAS;oBAErB,GAAC,EAAE,GAAG,mBAAmB,IAAG,QAAQ;oBACpC,GAAC,EAAE,GAAG,iBAAiB,IAAG,QAAQ;wBAErC,EACD,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAG,IAAI,mBACK,QAAQ,EACxB,SAAS,EAAG,KAAK,EACjB,KAAK,EAAG,KAAK,EACb,aAAa,EAAG,aAAa,IAE3B,YAAY,CAAC,IAAI,CAAC,CACL,CAClB,CAAC;;QACJ,CAAC;QAGO,2BAAQ,GAAhB;YACM,IAAA,eAIiB,EAHnB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACgB;YAEtB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QACH,CAAC;QAGO,gCAAa,GAArB;YACM,IAAA,eAIiB,EAHnB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACgB;YAEtB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QACH,CAAC;QAGO,gCAAa,GAArB;YACM,IAAA,eAGiB,EAFnB,oBAAO,EACP,sBAAQ,CACY;YAEtB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzB,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC;QAGO,2BAAQ,GAAhB;YACM,IAAA,eAIiB,EAHnB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACgB;YAEtB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QACH,CAAC;QAjGa,qBAAY,GAAG;YAC3B,QAAQ,EAAE,KAAK;YACf,EAAE,EAAE,iBAAK,CAAC,UAAU,CAAC;SACtB,CAAC;QA8CF;YADC,oBAAQ;gDAWR;QAGD;YADC,oBAAQ;qDAWR;QAGD;YADC,oBAAQ;qDAUR;QAGD;YADC,oBAAQ;gDAWR;QAEH,eAAC;KAAA,AArGD,CAA8D,KAAK,CAAC,SAAS,GAqG5E;IArGY,4BAAQ","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  autobind,\r\n  css,\r\n  getId,\r\n} from '../../Utilities';\r\nimport { IGridCellProps } from './GridCell.types';\r\nimport { CommandButton } from '../../Button';\r\n\r\nexport class GridCell<T, P extends IGridCellProps<T>> extends React.Component<P, {}> {\r\n\r\n  public static defaultProps = {\r\n    disabled: false,\r\n    id: getId('gridCell')\r\n  };\r\n\r\n  public render() {\r\n    let {\r\n      item,\r\n      id,\r\n      className,\r\n      role,\r\n      selected,\r\n      disabled,\r\n      onRenderItem,\r\n      cellDisabledStyle,\r\n      cellIsSelectedStyle,\r\n      index,\r\n      label,\r\n      getClassNames\r\n    } = this.props;\r\n\r\n    return (\r\n      <CommandButton\r\n        id={ id + '-item' + index }\r\n        data-index={ index }\r\n        data-is-focusable={ true }\r\n        disabled={ disabled }\r\n        className={ css(className,\r\n          {\r\n            ['' + cellIsSelectedStyle]: selected,\r\n            ['' + cellDisabledStyle]: disabled\r\n          }\r\n        ) }\r\n        onClick={ this._onClick }\r\n        onMouseEnter={ this._onMouseEnter }\r\n        onMouseLeave={ this._onMouseLeave }\r\n        onFocus={ this._onFocus }\r\n        role={ role }\r\n        aria-selected={ selected }\r\n        ariaLabel={ label }\r\n        title={ label }\r\n        getClassNames={ getClassNames }\r\n      >\r\n        { onRenderItem(item) }\r\n      </CommandButton >\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onClick() {\r\n    let {\r\n      onClick,\r\n      disabled,\r\n      item\r\n      } = this.props as P;\r\n\r\n    if (onClick && !disabled) {\r\n      onClick(item);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseEnter() {\r\n    let {\r\n      onHover,\r\n      disabled,\r\n      item\r\n      } = this.props as P;\r\n\r\n    if (onHover && !disabled) {\r\n      onHover(item);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseLeave() {\r\n    let {\r\n      onHover,\r\n      disabled\r\n      } = this.props as P;\r\n\r\n    if (onHover && !disabled) {\r\n      onHover();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onFocus() {\r\n    let {\r\n      onFocus,\r\n      disabled,\r\n      item\r\n      } = this.props as P;\r\n\r\n    if (onFocus && !disabled) {\r\n      onFocus(item);\r\n    }\r\n  }\r\n\r\n}"]}